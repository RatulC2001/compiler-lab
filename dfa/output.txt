***TOKENS AFTER SCANNING INPUT FILE***

MAIN -> main@1
open_first_bracket -> (@1
close_first_bracket -> )@1
open_second_bracket -> {@2
d_type -> int@3
ID -> r@3
semicolon -> ;@3
d_type -> real@4
ID -> x@4
COMMA -> ,@4
ID -> y@4
equals -> =@4
REAL -> 6.5@4
semicolon -> ;@4
d_type -> char@5
ID -> z@5
COMMA -> ,@5
ID -> another@5
semicolon -> ;@5
d_type -> int@7
ID -> avigyantesting@7
equals -> =@7
INTEGER -> 6@7
mul_op -> *@7
INTEGER -> 20@7
semicolon -> ;@7
if_token -> if@9
open_first_bracket -> (@9
ID -> x@9
comp_op -> >@9
INTEGER -> 20@9
close_first_bracket -> )@9
then_token -> then@9
open_second_bracket -> {@10
d_type -> char@11
ID -> spe@11
semicolon -> ;@11
d_type -> real@12
ID -> def@12
equals -> =@12
REAL -> 2.3@12
COMMA -> ,@12
ID -> abc@12
equals -> =@12
REAL -> 4.5@12
semicolon -> ;@12
d_type -> int@13
ID -> z@13
semicolon -> ;@13
output -> cout@14
o_cas -> <<@14
ID -> eps@14
semicolon -> ;@14
output -> cout@15
o_cas -> <<@15
CHARACTER -> 'Y'@15
semicolon -> ;@15
ID -> x@16
equals -> =@16
INTEGER -> 20@16
semicolon -> ;@16
close_second_bracket -> }@17
else_token -> else@18
open_second_bracket -> {@19
d_type -> char@20
ID -> alpha@20
COMMA -> ,@20
ID -> beta@20
semicolon -> ;@20
d_type -> int@21
ID -> gg@21
semicolon -> ;@21
input -> cin@22
i_cas -> >>@22
ID -> x@22
semicolon -> ;@22
output -> cout@23
o_cas -> <<@23
CHARACTER -> 'N'@23
semicolon -> ;@23
if_token -> if@24
open_first_bracket -> (@24
ID -> x@24
comp_op -> >@24
INTEGER -> 10@24
close_first_bracket -> )@24
then_token -> then@24
open_second_bracket -> {@25
d_type -> int@26
ID -> num@26
semicolon -> ;@26
d_type -> real@27
ID -> number@27
semicolon -> ;@27
output -> cout@28
o_cas -> <<@28
CHARACTER -> 'Y'@28
o_cas -> <<@28
ID -> x@28
semicolon -> ;@28
close_second_bracket -> }@29
semicolon -> ;@29
close_second_bracket -> }@30
semicolon -> ;@30
ID -> x@32
equals -> =@32
INTEGER -> 20@32
semicolon -> ;@32
d_type -> int@34
ID -> a@34
equals -> =@34
INTEGER -> 5@34
semicolon -> ;@34
d_type -> real@35
ID -> b@35
equals -> =@35
REAL -> 3.2@35
semicolon -> ;@35
output -> cout@36
o_cas -> <<@36
ID -> a@36
semicolon -> ;@36
if_token -> if@38
open_first_bracket -> (@38
ID -> a@38
comp_op -> ==@38
INTEGER -> 5@38
close_first_bracket -> )@38
then_token -> then@38
open_second_bracket -> {@39
output -> cout@40
o_cas -> <<@40
ID -> b@40
semicolon -> ;@40
close_second_bracket -> }@41
else_token -> else@42
open_second_bracket -> {@43
output -> cout@44
o_cas -> <<@44
ID -> a@44
o_cas -> <<@44
ID -> b@44
semicolon -> ;@44
if_token -> if@45
open_first_bracket -> (@45
ID -> a@45
comp_op -> >@45
INTEGER -> 10@45
close_first_bracket -> )@45
then_token -> then@45
open_second_bracket -> {@46
output -> cout@47
o_cas -> <<@47
ID -> io@47
semicolon -> ;@47
d_type -> real@48
ID -> io@48
semicolon -> ;@48
output -> cout@49
o_cas -> <<@49
CHARACTER -> 'Z'@49
o_cas -> <<@49
ID -> a@49
semicolon -> ;@49
close_second_bracket -> }@50
semicolon -> ;@50
close_second_bracket -> }@51
semicolon -> ;@51
close_second_bracket -> }@52
