34

S : St ;
St : "main" "(" ")" "{" statements "}" ;
statements : %empty ;
statements : statement ";" statements ;
statement : dec_st ; 
statement : math_st ;
statement : io ;
statement : if_st ; 
dec_st : "dtype" d_prod ;
d_prod : d_nat ;
d_prod : d_prod "," d_nat ;
d_nat : "ID" ;
d_nat : math_st ;
math_st : "ID" "equ" VALUE ;
io : "input" inp ;
io : "output" opt ;
inp : "i_cas" "ID" ;
inp : inp "i_cas" "ID" ;
opt : "o_cas" VALUE ;
opt : opt "o_cas" VALUE ;
if_st : "if_token" "(" comp_st ")" "then_token" "{" statements "}" CONT ;
CONT : "else_token" "{" statements "}" ;
CONT : %empty ;
comp_st : VALUE "comp_op" VALUE ;
comp_st : "(" comp_st ")" "r_o" "(" comp_st ")" ;
VALUE : VALUE "addop" TERM ;
VALUE : "addop" TERM ;
VALUE : TERM ;
TERM : TERM "mulop" FAC ;
TERM : FAC ;
FAC : "ID" ;
FAC : "NUMBER" ;
FAC : "CHARACTER" ;
FAC : "(" VALUE ")" ;

50

"main"
"("
")"
"{"
"dtype"
"ID"
","
"ID"
"equ"
"("
"NUMBER"
"mulop"
"NUMBER"
")"
";"
"if_token" 
"("
"ID" 
"comp_op"
"NUMBER"
")"
"then_token"
"{"
"ID"
"equ"
"ID"
"addop"
"NUMBER"
";"
"}"
"else_token"
"{"
"output"
"o_cas"
"NUMBER"
"mulop"
"NUMBER"
"addop"
"NUMBER"
"o_cas"
"CHARACTER"
";"
"}"
";"
"output"
"o_cas"
"ID"
";"
"}"
$
