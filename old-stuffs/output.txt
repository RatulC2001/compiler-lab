***TOKENS AFTER SCANNING INPUT FILE***

MAIN -> main@1
open_first_bracket -> (@1
close_first_bracket -> )@1
open_second_bracket -> {@2
d_type -> int@3
ID -> r@3
semicolon -> ;@3
d_type -> real@4
ID -> x@4
equals -> =@4
REAL -> 2.3@4
ID -> y@4
equals -> =@4
REAL -> 4.5@4
semicolon -> ;@4
d_type -> char@5
ID -> z@5
semicolon -> ;@5
if_token -> if@6
open_first_bracket -> (@6
ID -> x@6
comp_op -> >@6
INTEGER -> 20@6
close_first_bracket -> )@6
then_token -> then@6
open_second_bracket -> {@7
d_type -> char@8
ID -> eps@8
semicolon -> ;@8
d_type -> int@9
ID -> z@9
semicolon -> ;@9
output -> cout@10
o_cas -> <<@10
CHARACTER -> 'Y'@10
semicolon -> ;@10
ID -> x@11
equals -> =@11
INTEGER -> 20@11
semicolon -> ;@11
close_second_bracket -> }@12
else_token -> else@13
open_second_bracket -> {@14
d_type -> char@15
ID -> alpha@15
ID -> beta@15
semicolon -> ;@15
d_type -> int@16
ID -> gg@16
semicolon -> ;@16
input -> cin@17
i_cas -> >>@17
ID -> x@17
semicolon -> ;@17
output -> cout@18
o_cas -> <<@18
ID -> io@18
semicolon -> ;@18
output -> cout@19
o_cas -> <<@19
CHARACTER -> 'N'@19
semicolon -> ;@19
if_token -> if@20
open_first_bracket -> (@20
ID -> x@20
comp_op -> >@20
INTEGER -> 10@20
close_first_bracket -> )@20
then_token -> then@20
open_second_bracket -> {@21
d_type -> real@22
ID -> io@22
semicolon -> ;@22
d_type -> int@23
ID -> num@23
semicolon -> ;@23
output -> cout@24
o_cas -> <<@24
CHARACTER -> 'Y'@24
o_cas -> <<@24
ID -> x@24
semicolon -> ;@24
close_second_bracket -> }@25
semicolon -> ;@25
close_second_bracket -> }@26
semicolon -> ;@26
ID -> x@27
equals -> =@27
INTEGER -> 20@27
semicolon -> ;@27
close_second_bracket -> }@28
